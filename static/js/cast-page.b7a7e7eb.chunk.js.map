{"version":3,"file":"static/js/cast-page.b7a7e7eb.chunk.js","mappings":"yOAEaA,E,QAAgBC,GAAAA,GAAH,mJ,SCiC1B,EA9Ba,WACX,IAAMC,GAAUC,EAAAA,EAAAA,MAChB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,aAAiBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAASI,EAAKC,KAAlB,GACpC,GAAE,CAACT,KAGF,SAACF,EAAD,UACGK,EAAMO,KAAI,SAAAD,GAAI,OACb,0BACGA,EAAKE,cACJ,gBACEC,IAAG,yCAAoCH,EAAKE,cAC5CE,IAAKJ,EAAKK,KACVC,OAAO,MACPC,MAAM,SAGR,kBAGF,uBAAIP,EAAKK,SAZFL,EAAKQ,GADD,KAkBpB,C,8FC9BDC,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEDC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBF,IAAAA,IAAA,uCAA0CC,IADnE,cACQE,EADR,yBAESA,EAASb,KAAKc,SAFvB,2EAKeC,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,uFACyBN,IAAAA,IAAA,gCACIC,EADJ,kBACqBK,IAF9C,cACQH,EADR,yBAISA,EAASb,MAJlB,2EAOeiB,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,uFACyBR,IAAAA,IAAA,iBAAoBQ,EAApB,oBAAwCP,IADjE,cACQE,EADR,yBAESA,EAASb,MAFlB,2EAKemB,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BD,GAA5B,uFACyBR,IAAAA,IAAA,iBACXQ,EADW,4BACiBP,IAF1C,cACQE,EADR,yBAISA,EAASb,MAJlB,2EAOeoB,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BF,GAA/B,uFACyBR,IAAAA,IAAA,iBACXQ,EADW,4BACiBP,IAF1C,cACQE,EADR,yBAISA,EAASb,MAJlB,kEAOA,IAAMF,EAAM,CACVc,kBAlCF,WAEeA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAiCbG,gBAAAA,EACAE,gBAAAA,EACAE,aAAAA,EACAC,gBAAAA,GAGF,MAEAL,EAAgBM,UAAY,CAC1BL,MAAOM,IAAAA,OAAAA,YAGTL,EAAgBI,UAAY,CAC1BH,SAAUI,IAAAA,OAAAA,YAGZH,EAAaE,UAAY,CACvBH,SAAUI,IAAAA,OAAAA,YAGZF,EAAgBC,UAAY,CAC1BH,SAAUI,IAAAA,OAAAA,W","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","pages/services/MovieAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 100px;\n  align-items: center;\n  justify-content: center;\n  padding: 50px;\n`;\n","import { useOutletContext } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport api from 'pages/services/MovieAPI';\nimport { CastContainer } from './Cast.styled';\n\nconst Cast = () => {\n  const movieId = useOutletContext();\n  const [casts, setCasts] = useState([]);\n\n  useEffect(() => {\n    api.getMovieCast(movieId).then(data => setCasts(data.cast));\n  }, [movieId]);\n\n  return (\n    <CastContainer>\n      {casts.map(cast => (\n        <li key={cast.id}>\n          {cast.profile_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`}\n              alt={cast.name}\n              height=\"180\"\n              width=\"180\"\n            />\n          ) : (\n            <p></p>\n          )}\n\n          <p>{cast.name}</p>\n        </li>\n      ))}\n    </CastContainer>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f534638cb3304b9759e126ecf8f1bc28';\n\nasync function getTrendingMovies() {\n  const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nasync function getSearchMovies(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n}\n\nasync function getMovieDetails(movie_id) {\n  const response = await axios.get(`/movie/${movie_id}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nasync function getMovieCast(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nasync function getMovieReviews(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nconst api = {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n\nexport default api;\n\ngetSearchMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\ngetMovieDetails.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n\ngetMovieCast.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n\ngetMovieReviews.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n"],"names":["CastContainer","styled","movieId","useOutletContext","useState","casts","setCasts","useEffect","api","then","data","cast","map","profile_path","src","alt","name","height","width","id","axios","API_KEY","getTrendingMovies","response","results","getSearchMovies","query","getMovieDetails","movie_id","getMovieCast","getMovieReviews","propTypes","PropTypes"],"sourceRoot":""}