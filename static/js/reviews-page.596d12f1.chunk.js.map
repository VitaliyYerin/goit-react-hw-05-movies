{"version":3,"file":"static/js/reviews-page.596d12f1.chunk.js","mappings":"0OAEaA,E,QAAmBC,GAAAA,GAAH,0C,SCyB7B,EAtBgB,WACd,IAAMC,GAAUC,EAAAA,EAAAA,MAChB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,gBAAoBN,GAASO,MAAK,SAAAC,GAAI,OAAIJ,EAAWI,EAAKC,QAApB,GACvC,GAAE,CAACT,IAEsB,IAAnBG,EAAQO,QACb,SAACZ,EAAD,UACGK,EAAQQ,KAAI,SAAAC,GAAM,OACjB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAQrB,mEAEH,C,8FCtBDC,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEDC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBF,IAAAA,IAAA,uCAA0CC,IADnE,cACQE,EADR,yBAESA,EAASX,KAAKC,SAFvB,2EAKeW,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,uFACyBL,IAAAA,IAAA,gCACIC,EADJ,kBACqBI,IAF9C,cACQF,EADR,yBAISA,EAASX,MAJlB,2EAOec,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,uFACyBP,IAAAA,IAAA,iBAAoBO,EAApB,oBAAwCN,IADjE,cACQE,EADR,yBAESA,EAASX,MAFlB,2EAKegB,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BD,GAA5B,uFACyBP,IAAAA,IAAA,iBACXO,EADW,4BACiBN,IAF1C,cACQE,EADR,yBAISA,EAASX,MAJlB,2EAOeiB,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BF,GAA/B,uFACyBP,IAAAA,IAAA,iBACXO,EADW,4BACiBN,IAF1C,cACQE,EADR,yBAISA,EAASX,MAJlB,kEAOA,IAAMF,EAAM,CACVY,kBAlCF,WAEeA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAiCbE,gBAAAA,EACAE,gBAAAA,EACAE,aAAAA,EACAC,gBAAAA,GAGF,MAEAL,EAAgBM,UAAY,CAC1BL,MAAOM,IAAAA,OAAAA,YAGTL,EAAgBI,UAAY,CAC1BH,SAAUI,IAAAA,OAAAA,YAGZH,EAAaE,UAAY,CACvBH,SAAUI,IAAAA,OAAAA,YAGZF,EAAgBC,UAAY,CAC1BH,SAAUI,IAAAA,OAAAA,W","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","pages/services/MovieAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsContainer = styled.ul`\n  padding: 50px;\n`;\n","import { useOutletContext } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport api from 'pages/services/MovieAPI';\nimport { ReviewsContainer } from './Reviews.styled';\n\nconst Reviews = () => {\n  const movieId = useOutletContext();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    api.getMovieReviews(movieId).then(data => setReviews(data.results));\n  }, [movieId]);\n\n  return reviews.length !== 0 ? (\n    <ReviewsContainer>\n      {reviews.map(review => (\n        <li key={review.id}>\n          <h3>{review.author}</h3>\n          <p>{review.content}</p>\n        </li>\n      ))}\n    </ReviewsContainer>\n  ) : (\n    <p>We don't have any reviews for this movie</p>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f534638cb3304b9759e126ecf8f1bc28';\n\nasync function getTrendingMovies() {\n  const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nasync function getSearchMovies(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n}\n\nasync function getMovieDetails(movie_id) {\n  const response = await axios.get(`/movie/${movie_id}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nasync function getMovieCast(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nasync function getMovieReviews(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nconst api = {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n\nexport default api;\n\ngetSearchMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\ngetMovieDetails.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n\ngetMovieCast.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n\ngetMovieReviews.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n"],"names":["ReviewsContainer","styled","movieId","useOutletContext","useState","reviews","setReviews","useEffect","api","then","data","results","length","map","review","author","content","id","axios","API_KEY","getTrendingMovies","response","getSearchMovies","query","getMovieDetails","movie_id","getMovieCast","getMovieReviews","propTypes","PropTypes"],"sourceRoot":""}