{"version":3,"file":"static/js/movies-page.1cffa763.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/MoviesPage.styled.jsx","pages/MoviesPage.jsx","pages/services/MovieAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 1560px;\n  max-width: 98%;\n  padding: 2em 0;\n`;\n\nexport const Film = styled.li`\n`;\n\nexport const FilmTitle = styled.p`\n  font-size: 16px;\n  text-align: center;\n  font-weight: 700;\n  color: #fff;\n  max-width: 250px;\n  margin: 0 auto;\n`;\n\nexport const ImgMovieList = styled.img`\n  border-radius: 10px;\n  margin-bottom: 10px;\n  box-shadow: 0 1px 1px rgb(255,255,255, 11%), 0 2px 2px rgb(255,255,255, 11%), 0 4px 4px rgb(255,255,255, 11%), 0 8px 8px rgb(255,255,255, 11%), 0 16px 16px rgb(255,255,255, 11%), 0 32px 32px rgb(255,255,255, 11%);\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Film, FilmsList, FilmTitle, ImgMovieList } from './MoviesList.styled';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <FilmsList>\n      {films.map(film => (\n        <Film key={film.id}>\n          <Link to={`/movies/${film.id}`} state={{ from: location }}>\n            <ImgMovieList\n              width=\"250\"\n              src={`https://image.tmdb.org/t/p/w500${film.poster_path}`}\n              alt={film.original_title}\n            />\n            <FilmTitle>{film.original_title}</FilmTitle>\n          </Link>\n        </Film>\n      ))}\n    </FilmsList>\n  );\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 700px;\n  height: 50px;\n  padding-left: 10px;\n  outline: none;\n  border: none;\n  border-top-left-radius: 10px;\n  border-bottom-left-radius: 10px;\n  &:hover {\n    transition: all 250ms linear 0s;\n    background-color: #fff;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  padding-top: 50px;\n  padding-bottom: 30px;\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 68px;\n  height: 52px;\n  border: 0px;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center center;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n  cursor: pointer;\n  outline: none;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n  font-size: 0;\n  background-color: #fff;\n  &:hover {\n    svg {\n      transform: scale(1.1);\n      transition: all 250ms linear 0s;\n      background-color: #fff;\n    }\n  }\n`;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport api from 'pages/services/MovieAPI';\nimport { toast } from 'react-toastify';\nimport { Form, Input, SearchButton } from './MoviesPage.styled';\nimport { FaSearch } from 'react-icons/fa';\n\nconst Movies = () => {\n  const [value, setValue] = useState('');\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    (async () => {\n      try {\n        query &&\n        api.getSearchMovies(query).then(data => setFilms(data.results));\n      } catch (error) {\n        toast.error(error.message);\n      }\n    })();\n  }, [query]);\n\n  const onHandleChange = event => {\n    setValue(event.target.value);\n  };\n\n  const onHandleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: value });\n    setValue('');\n  };\n\n  return (\n    <>\n      <main>\n        <Form onSubmit={onHandleSubmit}>\n          <Input\n            type=\"text\"\n            placeholder=\"Enter film name...\"\n            onChange={onHandleChange}\n            value={value}\n          />\n          <SearchButton type=\"submit\">\n            <FaSearch size={30}></FaSearch>Search\n          </SearchButton>\n        </Form>\n        {films && <MoviesList films={films} />}\n      </main>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f534638cb3304b9759e126ecf8f1bc28';\n\nasync function getTrendingMovies() {\n  const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nasync function getSearchMovies(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n}\n\nasync function getMovieDetails(movie_id) {\n  const response = await axios.get(`/movie/${movie_id}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nasync function getMovieCast(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nasync function getMovieReviews(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nconst api = {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n\nexport default api;\n\ngetSearchMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\ngetMovieDetails.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n\ngetMovieCast.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n\ngetMovieReviews.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n"],"names":["FilmsList","styled","Film","FilmTitle","ImgMovieList","films","location","useLocation","map","film","to","id","state","from","width","src","poster_path","alt","original_title","Input","Form","SearchButton","useState","value","setValue","setFilms","useSearchParams","searchParams","setSearchParams","query","get","useEffect","api","then","data","results","error","toast","message","onSubmit","event","preventDefault","type","placeholder","onChange","target","size","MoviesList","axios","API_KEY","getTrendingMovies","response","getSearchMovies","getMovieDetails","movie_id","getMovieCast","getMovieReviews","propTypes","PropTypes"],"sourceRoot":""}