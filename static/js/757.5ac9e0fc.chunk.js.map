{"version":3,"file":"static/js/757.5ac9e0fc.chunk.js","mappings":"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","sources":["pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","pages/services/MovieAPI.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieWrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  width: 1560px;\n  max-width: 98%;\n  padding: 2em 0;\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 2em 0;\n`;\n\nexport const FilmInfo = styled.div`\n  padding: 20px;\n  margin: 0 0 0 50px;\n  background-color: rgba(0, 0, 0, 0.5);\n  height: auto;\n  border-radius: 10px;\n  color: #fff;\n`;\n\nexport const MovieImg = styled.img`\n  border-radius: 10px;\n`;\n\nexport const AdditionalInformation = styled.div`\n  text-align: center;\n  color: #fff;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  font-size: 24px;\n  font-weight: 700;\n  color: #fff;\n  text-decoration: none;\n  &.active {\n    color: brown;\n  }\n  &:hover:not(.active) {\n    text-decoration: underline;\n  }\n  &:last-child {\n    margin-left: 20px;\n  }\n`;\n\nexport const Container = styled.ul`\n  display: flex;\n  padding-left: 125px;\n`;\n\nexport const Nav = styled.nav`\n  padding: 20px 30px;\n  -webkit-box-shadow: -2px -1px 15px 7px rgba(0, 0, 0, 0.5);\n  -moz-box-shadow: -3px -2px 30px 14px rgba(0, 0, 0, 0.425);\n  box-shadow: -4px -3px 45px 21px rgba(0, 0, 0, 0.35);\n`;\n\nexport const ButtonGoBack = styled.button`\n  display: inline-block;\n  font-weight: 400;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  padding: 0.375rem 0.75rem;\n  font-size: 1rem;\n  line-height: 1.5;\n  border-radius: 0.25rem;\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\n    border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n  color: #fff;\n  background-color: red;\n  &:hover {\n    background-color: #fff;\n    color: black;\n  }\n`;\n","import { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport api from '../services/MovieAPI';\nimport { toast } from 'react-toastify';\nimport {\n  MovieWrapper,\n  AdditionalInformation,\n  ButtonGoBack,\n  FilmInfo,\n  MovieContainer,\n  MovieImg,\n  StyledLink,\n} from './MovieDetailsPage.styled';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n    (async () => {\n      try {\n        api.getMovieDetails(movieId).then(data => setMovie(data));\n      } catch (error) {\n        toast.error(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  const onGoBack = () => {\n    navigate(location.state?.from || '/');\n  };\n\n  return (\n    <MovieWrapper>\n      {movie && (\n        <>\n          <ButtonGoBack type=\"button\" onClick={onGoBack}>\n            Go Back\n          </ButtonGoBack>\n          <MovieContainer>\n            <MovieImg\n              width=\"300\"\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt={movie.original_title}\n            />\n            <FilmInfo>\n              <h2>\n                {`${movie.original_title} (${movie.release_date.slice(0, 4)})`}{' '}\n              </h2>\n              <h3>User score</h3>\n              <p>{`${movie.vote_average * 10}%`}</p>\n              <h3>Owerview:</h3>\n              <p>{movie.overview}</p>\n              <ul>\n                <h3>Genres:</h3>\n                {movie.genres.map(ganre => (\n                  <li key={ganre.id}>{ganre.name}</li>\n                ))}\n              </ul>\n            </FilmInfo>\n          </MovieContainer>\n          <AdditionalInformation>\n            <h2>Additional Information</h2>\n            <StyledLink to=\"cast\" state={location.state}>\n              Cast\n            </StyledLink>\n            <StyledLink to=\"reviews\" state={location.state}>\n              Reviews\n            </StyledLink>\n          </AdditionalInformation>\n          <Outlet context={movieId} />\n        </>\n      )}\n    </MovieWrapper>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f534638cb3304b9759e126ecf8f1bc28';\n\nasync function getTrendingMovies() {\n  const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nasync function getSearchMovies(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n}\n\nasync function getMovieDetails(movie_id) {\n  const response = await axios.get(`/movie/${movie_id}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nasync function getMovieCast(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nasync function getMovieReviews(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nconst api = {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n\nexport default api;\n\ngetSearchMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\ngetMovieDetails.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n\ngetMovieCast.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n\ngetMovieReviews.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n"],"names":["MovieWrapper","styled","MovieContainer","FilmInfo","MovieImg","AdditionalInformation","StyledLink","NavLink","ButtonGoBack","movieId","useParams","useState","movie","setMovie","location","useLocation","navigate","useNavigate","useEffect","api","then","data","error","toast","message","type","onClick","state","from","width","src","poster_path","alt","original_title","release_date","slice","vote_average","overview","genres","map","ganre","name","id","to","context","axios","API_KEY","getTrendingMovies","response","results","getSearchMovies","query","getMovieDetails","movie_id","getMovieCast","getMovieReviews","propTypes","PropTypes"],"sourceRoot":""}