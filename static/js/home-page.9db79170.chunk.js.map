{"version":3,"file":"static/js/home-page.9db79170.chunk.js","mappings":"yNAEaA,EAAYC,EAAAA,GAAAA,GAAH,iIAQTC,EAAOD,EAAAA,GAAAA,GAAH,wBAGJE,EAAYF,EAAAA,GAAAA,EAAH,4IASTG,EAAeH,EAAAA,GAAAA,IAAH,gD,SCMzB,EAxBmB,SAAC,GAAe,IAAbI,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACP,EAAD,UACGK,EAAMG,KAAI,SAAAC,GAAI,OACb,SAACP,EAAD,WACE,UAAC,KAAD,CAAMQ,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAA/C,WACE,SAACF,EAAD,CACEU,MAAM,MACNC,IAAG,yCAAoCN,EAAKO,aAC5CC,IAAKR,EAAKS,kBAEZ,SAACf,EAAD,UAAYM,EAAKS,qBAPVT,EAAKE,GADH,KAcpB,C,6KCpBYQ,EAAYlB,EAAAA,GAAAA,KAAH,0CAITmB,EAAQnB,EAAAA,GAAAA,GAAH,+F,SCuBlB,EAvBa,WACX,OAA4BoB,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,8EACC,IACEC,EAAAA,EAAAA,oBAAwBC,MAAK,SAAArB,GAC3BkB,EAAUlB,EACX,GAGF,CAFC,MAAOsB,GACPC,EAAAA,GAAAA,MAAYD,EAAME,QACnB,CAPF,0CAAD,EASD,GAAE,KAGD,UAACV,EAAD,YACE,SAACC,EAAD,6BACCE,IAAU,SAACQ,EAAA,EAAD,CAAYzB,MAAOiB,MAGnC,C,8FCxBDS,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEDC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBF,IAAAA,IAAA,uCAA0CC,IADnE,cACQE,EADR,yBAESA,EAASC,KAAKC,SAFvB,2EAKeC,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,uFACyBP,IAAAA,IAAA,gCACIC,EADJ,kBACqBM,IAF9C,cACQJ,EADR,yBAISA,EAASC,MAJlB,2EAOeI,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,uFACyBT,IAAAA,IAAA,iBAAoBS,EAApB,oBAAwCR,IADjE,cACQE,EADR,yBAESA,EAASC,MAFlB,2EAKeM,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BD,GAA5B,uFACyBT,IAAAA,IAAA,iBACXS,EADW,4BACiBR,IAF1C,cACQE,EADR,yBAISA,EAASC,MAJlB,2EAOeO,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BF,GAA/B,uFACyBT,IAAAA,IAAA,iBACXS,EADW,4BACiBR,IAF1C,cACQE,EADR,yBAISA,EAASC,MAJlB,kEAOA,IAAMV,EAAM,CACVQ,kBAlCF,WAEeA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAiCbI,gBAAAA,EACAE,gBAAAA,EACAE,aAAAA,EACAC,gBAAAA,GAGF,MAEAL,EAAgBM,UAAY,CAC1BL,MAAOM,IAAAA,OAAAA,YAGTL,EAAgBI,UAAY,CAC1BH,SAAUI,IAAAA,OAAAA,YAGZH,EAAaE,UAAY,CACvBH,SAAUI,IAAAA,OAAAA,YAGZF,EAAgBC,UAAY,CAC1BH,SAAUI,IAAAA,OAAAA,W","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage.styled.jsx","pages/HomePage.jsx","pages/services/MovieAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FilmsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 150px;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Film = styled.li`\n`;\n\nexport const FilmTitle = styled.p`\n  display: inline;\n  width: 200px;\n  padding-top: 5px;\n  font-size: 14px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const ImgMovieList = styled.img`\n  border-radius: 10px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Film, FilmsList, FilmTitle, ImgMovieList } from './MoviesList.styled';\n\nconst MoviesList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <FilmsList>\n      {films.map(film => (\n        <Film key={film.id}>\n          <Link to={`/movies/${film.id}`} state={{ from: location }}>\n            <ImgMovieList\n              width=\"250\"\n              src={`https://image.tmdb.org/t/p/w500${film.poster_path}`}\n              alt={film.original_title}\n            />\n            <FilmTitle>{film.original_title}</FilmTitle>\n          </Link>\n        </Film>\n      ))}\n    </FilmsList>\n  );\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.array.isRequired,\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  padding: 50px;\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n  justify-content: center;\n  padding-bottom: 30px;\n`;\n","import MoviesList from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport api from './services/MovieAPI';\nimport { toast } from 'react-toastify';\nimport { Container, Title } from './HomePage.styled';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        api.getTrendingMovies().then(films => {\n          setMovies(films);\n        });\n      } catch (error) {\n        toast.error(error.message);\n      }\n    })();\n  }, []);\n\n  return (\n    <Container>\n      <Title>Trending Films</Title>\n      {movies && <MoviesList films={movies} />}\n    </Container>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f534638cb3304b9759e126ecf8f1bc28';\n\nasync function getTrendingMovies() {\n  const response = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return response.data.results;\n}\n\nasync function getSearchMovies(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data;\n}\n\nasync function getMovieDetails(movie_id) {\n  const response = await axios.get(`/movie/${movie_id}?api_key=${API_KEY}`);\n  return response.data;\n}\n\nasync function getMovieCast(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nasync function getMovieReviews(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nconst api = {\n  getTrendingMovies,\n  getSearchMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n\nexport default api;\n\ngetSearchMovies.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\ngetMovieDetails.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n\ngetMovieCast.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n\ngetMovieReviews.propTypes = {\n  movie_id: PropTypes.number.isRequired,\n};\n"],"names":["FilmsList","styled","Film","FilmTitle","ImgMovieList","films","location","useLocation","map","film","to","id","state","from","width","src","poster_path","alt","original_title","Container","Title","useState","movies","setMovies","useEffect","api","then","error","toast","message","MoviesList","axios","API_KEY","getTrendingMovies","response","data","results","getSearchMovies","query","getMovieDetails","movie_id","getMovieCast","getMovieReviews","propTypes","PropTypes"],"sourceRoot":""}